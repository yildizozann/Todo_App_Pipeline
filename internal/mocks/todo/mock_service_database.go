// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/todo/service.go

// Package mock_todo is a generated GoMock package.
package mock_todo

import (
	reflect "reflect"
	todo "todo_app/internal/todo"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceDatabase is a mock of ServiceDatabase interface.
type MockServiceDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockServiceDatabaseMockRecorder
}

// MockServiceDatabaseMockRecorder is the mock recorder for MockServiceDatabase.
type MockServiceDatabaseMockRecorder struct {
	mock *MockServiceDatabase
}

// NewMockServiceDatabase creates a new mock instance.
func NewMockServiceDatabase(ctrl *gomock.Controller) *MockServiceDatabase {
	mock := &MockServiceDatabase{ctrl: ctrl}
	mock.recorder = &MockServiceDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceDatabase) EXPECT() *MockServiceDatabaseMockRecorder {
	return m.recorder
}

// AddNewToDoToDatabase mocks base method.
func (m *MockServiceDatabase) AddNewToDoToDatabase(r *todo.AddToDoRequest) (*todo.AddToDoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewToDoToDatabase", r)
	ret0, _ := ret[0].(*todo.AddToDoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNewToDoToDatabase indicates an expected call of AddNewToDoToDatabase.
func (mr *MockServiceDatabaseMockRecorder) AddNewToDoToDatabase(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewToDoToDatabase", reflect.TypeOf((*MockServiceDatabase)(nil).AddNewToDoToDatabase), r)
}

// GetAllTodo mocks base method.
func (m *MockServiceDatabase) GetAllTodo() (*[]todo.DatabaseStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTodo")
	ret0, _ := ret[0].(*[]todo.DatabaseStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTodo indicates an expected call of GetAllTodo.
func (mr *MockServiceDatabaseMockRecorder) GetAllTodo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTodo", reflect.TypeOf((*MockServiceDatabase)(nil).GetAllTodo))
}
